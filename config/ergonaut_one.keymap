/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_left {
            bindings = <&kp LEFT_ARROW>;
            key-positions = <39 36>;
        };

        combo_right {
            bindings = <&kp RIGHT>;
            key-positions = <41 38>;
        };

        combo_down {
            bindings = <&kp DOWN>;
            key-positions = <40 38>;
        };

        combo_up {
            bindings = <&kp UP_ARROW>;
            key-positions = <39 37>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&kp GRAVE   &kp Q        &kp W           &kp F                        &kp P           &kp B                   &kp J                  &kp L       &kp U                      &kp Y            &kp SEMICOLON  &kp BSPC
&kp TAB     &hm LCTRL A  &hm LEFT_ALT R  &hm LEFT_GUI S               &lt 1 T         &lt 3 G                 &lt 3 M                &lt 2 N     &hm RIGHT_GUI E            &hm RIGHT_ALT I  &hm RCTRL O    &kp SQT
&kp ESCAPE  &kp Z        &kp X           &kp C                        &kp D           &kp V                   &kp K                  &kp H       &kp COMMA                  &kp DOT          &kp FSLH       &kp ENTER
                                         &mt LEFT_COMMAND LEFT_ARROW  &lt 1 UP_ARROW  &mt LEFT_SHIFT ENTER    &mt RIGHT_SHIFT SPACE  &lt 2 DOWN  &mt RIGHT_ALT RIGHT_ARROW
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Lower";
            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3    &kp N4  &kp N5       &kp N6     &kp N7          &kp N8        &kp N9            &kp N0             &kp BSPC
&trans     &trans  &trans  &trans    &trans  &trans       &kp LEFT   &kp MINUS       &kp EQUAL     &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH
&kp LSHFT  &trans  &trans  &trans    &trans  &trans       &trans     &kp LEFT_ARROW  &kp UP_ARROW  &kp DOWN_ARROW    &kp RIGHT          &trans
                           &kp LGUI  &trans  &kp ENTER    &kp SPACE  &trans          &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
&kp TILDE   &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS        &kp KP_MULTIPLY  &kp LPAR           &kp RPAR         &kp BSPC
&kp DELETE  &kp F1    &kp F2  &kp F3    &kp F4    &kp F5       &kp F11    &kp UNDERSCORE  &kp PLUS         &kp LEFT_BRACE     &kp RIGHT_BRACE  &kp PIPE
&kp LSHFT   &kp F6    &kp F7  &kp F9    &kp F9    &kp F10      &kp F12    &kp K_NEXT      &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &kp C_PLAY       &kp TILDE
                              &kp LGUI  &trans    &kp SPACE    &kp RET    &trans          &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&bt BT_CLR_ALL  &bt BT_SEL 0          &bt BT_SEL 1          &bt BT_SEL 2      &bt BT_SEL 3   &bt BT_SEL 4    &trans             &mkp LCLK          &trans              &mkp RCLK  &trans  &trans
&trans          &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans            &trans         &trans          &kp C_VOLUME_DOWN  &trans             &trans              &trans     &trans  &trans
&trans          &trans                &kp C_REWIND          &kp C_PLAY_PAUSE  &kp K_FORWARD  &kp K_MUTE      &kp C_VOLUME_UP    &mkp MB4           &mkp MB3            &mkp MB5   &trans  &trans
                                                            &kp C_REWIND      &kp C_VOL_UP   &kp K_MUTE      &kp C_PLAY_PAUSE   &kp C_VOLUME_DOWN  &kp C_FAST_FORWARD
            >;
        };
    };
};
